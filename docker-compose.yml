version: '3.4'

x-logging: &logging
  driver: json-file
  options:
    max-size: 100m
    max-file: '5'

services:
  bot:
    image: registry.gitlab.com/pawabot/pawa:${VERSION}
    init: true
    depends_on:
      - datastore
    deploy:
      resources:
        limits:
          cpus: 1
          memory: 6G
    environment:
      - APP_URL=${APP_URL}
      - BOT_ACTIVITY=${BOT_ACTIVITY}
      - BOT_DATA_DIR=${BOT_DATA_DIR}
      - BOT_FILE_FORMAT=${BOT_FILE_FORMAT}
      - BOT_HTTP_PORT=${BOT_HTTP_PORT}
      - BOT_GUILD_WHITELIST=${BOT_GUILD_WHITELIST}
      - BOT_LEAVE_GUILD_AFTER=${BOT_LEAVE_GUILD_AFTER}
      - BOT_MAINTENANCE=${BOT_MAINTENANCE}
      - BOT_MP3_VBR=${BOT_MP3_VBR}
      - BOT_STANDALONE=${BOT_STANDALONE}
      - BOT_TOKEN=${BOT_TOKEN}
      - BOT_WEBSITE=${BOT_WEBSITE}
      - DB_NAME=${DB_NAME}
      - DB_HOST=${DB_HOST}
      - DB_USER=${DB_USER}
      - DB_PASSWORD=${DB_PASSWORD}
      - DS_ACCESS_KEY=${DS_ACCESS_KEY}
      - DS_BASEURL=${DS_BASEURL}
      - DS_BUCKET=${DS_BUCKET}
      - DS_HOST=${DS_HOST}
      - DS_SECRET_KEY=${DS_SECRET_KEY}
      - OVERRIDE_FILE=${OVERRIDE_FILE}
      - TRACING_API_KEY=${TRACING_API_KEY}
      - TZ=${TZ}
      - JAVA_TOOL_OPTIONS=-Dlog4j.configurationFile=log4j2-prod.xml
                          -XX:MinRAMPercentage=${JVM_MIN_RAM_PERCENTAGE}
                          -XX:MaxRAMPercentage=${JVM_MAX_RAM_PERCENTAGE}
      - SERVICE_NAME=${SERVICE_NAME}
      - SAMPLE_RATE=${SAMPLE_RATE}
    ports:
      - "127.0.0.1:7888:7888"
    restart: on-failure:100
    volumes:
      - data:${BOT_DATA_DIR}
      - ./logs:/app/logs
    logging:
      <<: *logging
  database:
    image: postgres@sha256:b6a3459825427f08ab886545c64d4e5754aa425c5eea678d5359f06a9bf7faab
    command: -c logging_collector=on -c log_directory=logs -c log_min_duration_statement=0 -c log_statement=none
    deploy:
      resources:
        limits:
          cpus: 1
          memory: 2G
    environment:
      - POSTGRES_PASSWORD=${DB_PASSWORD}
      - POSTGRES_DB=${DB_NAME}
    ports:
      - "127.0.0.1:5432:5432"
    volumes:
      - db-data:/var/lib/postgresql/data
  otel-collector:
    image: otel/opentelemetry-collector-contrib
    volumes:
      - ./otel-collector-config.yaml:/etc/otelcol-contrib/config.yaml
    ports:
      - "127.0.0.1:1888:1888" # pprof extension
      - "127.0.0.1:8888:8888" # Prometheus metrics exposed by the Collector
      - "127.0.0.1:8889:8889" # Prometheus exporter metrics
      - "127.0.0.1:13133:13133" # health_check extension
      - "127.0.0.1:4317:4317" # OTLP gRPC receiver
      - "127.0.0.1:4318:4318" # OTLP http receiver
      - "127.0.0.1:55679:55679" # zpages extension
    logging:
      <<: *logging

volumes:
  data:
    driver: local-persist
    driver_opts:
      mountpoint: ${BOT_MOUNT_DIR}
  db-data:
    driver: local-persist
    driver_opts:
      mountpoint: ${DB_MOUNT_DIR}
